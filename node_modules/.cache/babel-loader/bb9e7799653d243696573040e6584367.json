{"ast":null,"code":"var _jsxFileName = \"/home/tlancia16/libkiosk/src/pages/passwordReset.js\";\nimport React from \"react\";\nimport { Button } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\nimport IdleTimer from \"react-idle-timer\";\nimport { IdleTimeOutModal } from \"../components/IdleModal\";\nimport \"./home.css\";\nimport { checkPropTypes } from \"prop-types\"; // URL for iframe\n\nconst passwordResetLink = \"https://den.apu.edu/idm/passwordResetIdentification.action\"; //////////////////////////////////////////////////////\n\n/* Styles                                           */\n//////////////////////////////////////////////////////\n\nconst iframeStyle = {\n  marginTop: \"60px\"\n};\nconst rightDiv = {\n  flex: 1,\n  height: \"89vh\"\n};\nconst buttonStyle = {\n  marginTop: 15\n};\nconst leftText = {\n  marginTop: \"30vh\",\n  textAlign: \"center\",\n  fontSize: 56,\n  fontWeight: \"bold\"\n};\nconst paragraphStyle = {\n  marginTop: 25,\n  marginLeft: \"25%\",\n  marginRight: \"25%\",\n  textAlign: \"center\",\n  fontSize: 24,\n  color: \"#808080\"\n};\nlet n = 0; //////////////////////////////////////////////////////\n\n/* Wepa Support Page                                */\n//////////////////////////////////////////////////////\n\nexport class passwordReset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Minutes before timeout\n      timeIdle: 5,\n      // Is modal showing\n      showModal: false,\n      isIdle: false\n    };\n    this.idleTimer = null;\n    this.onAction = this._onAction.bind(this);\n    this.onActive = this._onActive.bind(this);\n    this.onIdle = this._onIdle.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  } //   catch() {\n  //     if (n < 2) {\n  //       n = n + 1;\n  //     }\n  //     if (n == 3) {\n  //       this.props.history.push(\"/APUSupport\");\n  //     }\n  //     console.log(n);\n  //   }\n\n\n  passIframe() {\n    try {\n      return React.createElement(\"iframe\", {\n        id: \"passReset\",\n        title: \"passReset\",\n        src: passwordResetLink,\n        width: \"100%\",\n        height: \"100%\",\n        style: {\n          iframeStyle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    } catch (error) {//this.props.history.push(\"/APUSupport\");\n    }\n  } // If modal is closed by the user\n  // Restart timeout timer\n\n\n  handleClose() {\n    this.setState({\n      showModal: false,\n      timeIdle: 5\n    });\n  } // If user is inactive, go back to home page\n\n\n  handleLogout() {\n    this.setState({\n      showModal: false\n    });\n    this.props.history.push(\"/\");\n  } // Display modal after time\n\n\n  displayModal() {\n    if (this.state.showModal) {\n      return React.createElement(IdleTimeOutModal, {\n        showModal: this.state.showModal,\n        handleClose: this.handleClose,\n        handleLogout: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  } // Starts timeout timer\n\n\n  runTimer() {\n    return React.createElement(IdleTimer, {\n      ref: ref => {\n        this.idleTimer = ref;\n      },\n      element: document,\n      onActive: this.onActive,\n      onIdle: this.onIdle,\n      onAction: this.onAction,\n      debounce: 250,\n      timeout: 1000 * 60 * this.state.timeIdle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n  } //////////////////////////////////////////////////////\n\n  /* JSX Render Page                                  */\n  //////////////////////////////////////////////////////\n\n\n  render() {\n    return (// Encompasing Div\n      React.createElement(\"div\", {\n        className: \"flexColumn\",\n        id: \"wepaPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.runTimer(), React.createElement(\"div\", {\n        style: rightDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.passIframe()), React.createElement(\"p\", {\n        style: {\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"* The link to IMT Support Desk does not function, please click\", React.createElement(Link, {\n        to: \"/APUSupport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \" HERE \"), \"for assistance *\"), this.displayModal())\n    );\n  } //////////////////////////////////////////////////////\n\n  /* Event Listener Actions                           */\n  //////////////////////////////////////////////////////\n\n\n  _onAction(e) {\n    // User did something\n    console.log(\"user did something\", e);\n    this.setState({\n      isIdle: false\n    });\n  }\n\n  _onActive(e) {\n    console.log(\"user is active\", e);\n\n    if (!this.showModal) {\n      this.setState({\n        isIdle: false\n      });\n    }\n  } // If timeout timer runs out, it checks to see if the moda is visable\n  // If modal is visable, go back to home page\n  // Else, set showModal to true and set timeout timer to 1 minute\n\n\n  _onIdle(e) {\n    console.log(\"user is idle\", e);\n    const isIdle = this.state.isIdle;\n\n    if (isIdle) {\n      this.props.history.push(\"/\");\n    } else {\n      this.setState({\n        showModal: true\n      });\n      this.setState({\n        timeIdle: 1\n      });\n      this.idleTimer.reset();\n      this.setState({\n        isIdle: true\n      });\n    }\n  }\n\n}\nexport default passwordReset;","map":{"version":3,"sources":["/home/tlancia16/libkiosk/src/pages/passwordReset.js"],"names":["React","Button","Link","IdleTimer","IdleTimeOutModal","checkPropTypes","passwordResetLink","iframeStyle","marginTop","rightDiv","flex","height","buttonStyle","leftText","textAlign","fontSize","fontWeight","paragraphStyle","marginLeft","marginRight","color","n","passwordReset","Component","constructor","props","state","timeIdle","showModal","isIdle","idleTimer","onAction","_onAction","bind","onActive","_onActive","onIdle","_onIdle","handleClose","handleLogout","passIframe","error","setState","history","push","displayModal","runTimer","ref","document","render","e","console","log","reset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\nimport IdleTimer from \"react-idle-timer\";\nimport { IdleTimeOutModal } from \"../components/IdleModal\";\nimport \"./home.css\";\nimport { checkPropTypes } from \"prop-types\";\n\n// URL for iframe\nconst passwordResetLink =\n  \"https://den.apu.edu/idm/passwordResetIdentification.action\";\n\n//////////////////////////////////////////////////////\n/* Styles                                           */\n//////////////////////////////////////////////////////\nconst iframeStyle = {\n  marginTop: \"60px\"\n};\nconst rightDiv = {\n  flex: 1,\n  height: \"89vh\"\n};\nconst buttonStyle = {\n  marginTop: 15\n};\nconst leftText = {\n  marginTop: \"30vh\",\n  textAlign: \"center\",\n  fontSize: 56,\n  fontWeight: \"bold\"\n};\nconst paragraphStyle = {\n  marginTop: 25,\n  marginLeft: \"25%\",\n  marginRight: \"25%\",\n  textAlign: \"center\",\n  fontSize: 24,\n  color: \"#808080\"\n};\n\nlet n = 0;\n\n//////////////////////////////////////////////////////\n/* Wepa Support Page                                */\n//////////////////////////////////////////////////////\nexport class passwordReset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Minutes before timeout\n      timeIdle: 5,\n\n      // Is modal showing\n      showModal: false,\n      isIdle: false\n    };\n    this.idleTimer = null;\n    this.onAction = this._onAction.bind(this);\n    this.onActive = this._onActive.bind(this);\n    this.onIdle = this._onIdle.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  //   catch() {\n  //     if (n < 2) {\n  //       n = n + 1;\n  //     }\n  //     if (n == 3) {\n  //       this.props.history.push(\"/APUSupport\");\n  //     }\n  //     console.log(n);\n  //   }\n\n  passIframe() {\n    try {\n      return (\n        <iframe\n          id=\"passReset\"\n          title=\"passReset\"\n          src={passwordResetLink}\n          width=\"100%\"\n          height=\"100%\"\n          style={{ iframeStyle }}\n        />\n      );\n    } catch (error) {\n      //this.props.history.push(\"/APUSupport\");\n    }\n  }\n\n  // If modal is closed by the user\n  // Restart timeout timer\n  handleClose() {\n    this.setState({ showModal: false, timeIdle: 5 });\n  }\n\n  // If user is inactive, go back to home page\n  handleLogout() {\n    this.setState({ showModal: false });\n    this.props.history.push(\"/\");\n  }\n\n  // Display modal after time\n  displayModal() {\n    if (this.state.showModal) {\n      return (\n        <IdleTimeOutModal\n          showModal={this.state.showModal}\n          handleClose={this.handleClose}\n          handleLogout={this.handleLogout}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n  // Starts timeout timer\n  runTimer() {\n    return (\n      <IdleTimer\n        ref={ref => {\n          this.idleTimer = ref;\n        }}\n        element={document}\n        onActive={this.onActive}\n        onIdle={this.onIdle}\n        onAction={this.onAction}\n        debounce={250}\n        timeout={1000 * 60 * this.state.timeIdle}\n      />\n    );\n  }\n\n  //////////////////////////////////////////////////////\n  /* JSX Render Page                                  */\n  //////////////////////////////////////////////////////\n  render() {\n    return (\n      // Encompasing Div\n      <div className=\"flexColumn\" id=\"wepaPage\">\n        {/* Start TImeout Timer */}\n        {this.runTimer()}\n\n        {/* Right Side of Page (iframe) */}\n        <div style={rightDiv}>{this.passIframe()}</div>\n\n        <p style={{ marginLeft: 5 }}>\n          * The link to IMT Support Desk does not function, please click\n          <Link to=\"/APUSupport\"> HERE </Link>\n          for assistance *\n        </p>\n\n        {/* Calls method to display modal */}\n        {this.displayModal()}\n      </div>\n    );\n  }\n\n  //////////////////////////////////////////////////////\n  /* Event Listener Actions                           */\n  //////////////////////////////////////////////////////\n  _onAction(e) {\n    // User did something\n    console.log(\"user did something\", e);\n    this.setState({ isIdle: false });\n  }\n\n  _onActive(e) {\n    console.log(\"user is active\", e);\n    if (!this.showModal) {\n      this.setState({ isIdle: false });\n    }\n  }\n\n  // If timeout timer runs out, it checks to see if the moda is visable\n  // If modal is visable, go back to home page\n  // Else, set showModal to true and set timeout timer to 1 minute\n  _onIdle(e) {\n    console.log(\"user is idle\", e);\n    const isIdle = this.state.isIdle;\n    if (isIdle) {\n      this.props.history.push(\"/\");\n    } else {\n      this.setState({ showModal: true });\n      this.setState({ timeIdle: 1 });\n      this.idleTimer.reset();\n      this.setState({ isIdle: true });\n    }\n  }\n}\n\nexport default passwordReset;\n"]},"metadata":{},"sourceType":"module"}